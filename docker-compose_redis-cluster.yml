
#docker inspect -f '{{ (index .NetworkSettings.Networks "local-network").IPAddress }}' redis-cluster-1
#docker run -i --rm --net local-network redis sh -c 'redis-cli --cluster create 172.16.238.51:6379 172.16.238.52:6379 172.16.238.53:6379 172.16.238.54:6379 172.16.238.55:6379 172.16.238.56:6379 --cluster-replicas 1'

version: '2.1'
services:
  redis-cluster-1:
    extends:
      file: docker-compose-base.yml
      service: base-redis
    command: ["redis-server", "--port", "6379", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes", "--min-slaves-to-write", "1", "--min-slaves-max-lag", "10", "--maxmemory", "2gb", "--maxmemory-policy", "allkeys-lru"]
    container_name: ${CONTAINER_HOST_NAME:-redis-cluster-1}
    hostname: ${CONTAINER_HOST_NAME:-redis-cluster-1}
    networks:
      local-network:
        ipv4_address: ${IPV4_ADDRESS:-172.16.238.51}
    ports:
    - "${EXTERNAL_REDIS_6379_PORT:-6379}:6379"
    restart: always
    volumes:
    - data-1:/data

  redis-cluster-2:
    extends:
      file: docker-compose-base.yml
      service: base-redis
    command: ["redis-server", "--port", "6379", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes", "--min-slaves-to-write", "1", "--min-slaves-max-lag", "10", "--maxmemory", "2gb", "--maxmemory-policy", "allkeys-lru"]
    container_name: ${CONTAINER_HOST_NAME:-redis-cluster-2}
    hostname: ${CONTAINER_HOST_NAME:-redis-cluster-2}
    networks:
      local-network:
        ipv4_address: ${IPV4_ADDRESS:-172.16.238.52}
    restart: always
    volumes:
    - data-2:/data

  redis-cluster-3:
    extends:
      file: docker-compose-base.yml
      service: base-redis
    command: ["redis-server", "--port", "6379", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes", "--min-slaves-to-write", "1", "--min-slaves-max-lag", "10", "--maxmemory", "2gb", "--maxmemory-policy", "allkeys-lru"]
    container_name: ${CONTAINER_HOST_NAME:-redis-cluster-3}
    hostname: ${CONTAINER_HOST_NAME:-redis-cluster-3}
    networks:
      local-network:
        ipv4_address: ${IPV4_ADDRESS:-172.16.238.53}
    restart: always
    volumes:
    - data-3:/data

  redis-cluster-4:
    extends:
      file: docker-compose-base.yml
      service: base-redis
    command: ["redis-server", "--port", "6379", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes", "--min-slaves-to-write", "1", "--min-slaves-max-lag", "10", "--maxmemory", "2gb", "--maxmemory-policy", "allkeys-lru"]
    container_name: ${CONTAINER_HOST_NAME:-redis-cluster-4}
    hostname: ${CONTAINER_HOST_NAME:-redis-cluster-4}
    networks:
      local-network:
        ipv4_address: ${IPV4_ADDRESS:-172.16.238.54}
    restart: always
    volumes:
      - data-4:/data

  redis-cluster-5:
    extends:
      file: docker-compose-base.yml
      service: base-redis
    command: ["redis-server", "--port", "6379", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes", "--min-slaves-to-write", "1", "--min-slaves-max-lag", "10", "--maxmemory", "2gb", "--maxmemory-policy", "allkeys-lru"]
    container_name: ${CONTAINER_HOST_NAME:-redis-cluster-5}
    hostname: ${CONTAINER_HOST_NAME:-redis-cluster-5}
    networks:
      local-network:
        ipv4_address: ${IPV4_ADDRESS:-172.16.238.55}
    restart: always
    volumes:
      - data-5:/data

  redis-cluster-6:
    extends:
      file: docker-compose-base.yml
      service: base-redis
    command: ["redis-server", "--port", "6379", "--cluster-enabled", "yes", "--cluster-config-file", "nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes", "--min-slaves-to-write", "1", "--min-slaves-max-lag", "10", "--maxmemory", "2gb", "--maxmemory-policy", "allkeys-lru"]
    container_name: ${CONTAINER_HOST_NAME:-redis-cluster-6}
    hostname: ${CONTAINER_HOST_NAME:-redis-cluster-6}
    networks:
      local-network:
        ipv4_address: ${IPV4_ADDRESS:-172.16.238.56}
    restart: always
    volumes:
      - data-6:/data


networks:
  local-network:
    external: true
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24
      - subnet: 2001:3984:3989::/64


volumes:
  data-1:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/1
      o: bind
  data-2:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/2
      o: bind
  data-3:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/3
      o: bind
  data-4:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/4
      o: bind
  data-5:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/5
      o: bind
  data-6:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/6
      o: bind
